<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rupp.assignment.dao.StudentDao">
	
	<resultMap type='com.rupp.assignment.json.JStudent' id='StudentResult'>

		<id property='id' column='id' />
		<result property='firstname' column='firstname' />		
		<result property='lastname' column='lastname' />
		<result property='sex' column='sex' />
		<result property='sexLabel' column='sex_label' />
		<result property='dob' column='dob' />
		<result property='address' column='address' />
		<result property='contact_person_name' column='contact_person_name' />
		<result property='contact_person_relationship' column='contact_person_relationship' />
		<result property='contact_person_relationship_label' column='contact_person_relationship_label' />
		<result property='contact_person_phone' column='contact_person_phone' />
		<result property='createdDate' column='created_date' />
		<result property='modifiedDate' column='modified_date' />
		<result property="status" column="status" />
		<association property="createdBy"
                 column="created_by" 
                 javaType="com.rupp.assignment.json.JUser" 
                 select="com.rupp.assignment.dao.UserDao.findById"/>
		<association property="modifiedBy"
                 column="modified_by" 
                 javaType="com.rupp.assignment.json.JUser" 
                 select="com.rupp.assignment.dao.UserDao.findById"/>
	</resultMap>
	
  <insert id="add"
        parameterType="com.rupp.assignment.json.JStudent"
        useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO students (
        
        	firstname,
        	lastname,
        	
        	address,
        	contact_person_name,
        	contact_person_phone,
        	
        	contact_person_relationship,
        	sex,
        	dob,
        	        	
        	created_date,
			created_by,
			status
        )
        VALUES (
         #{firstname},
         #{lastname},
         #{address},
         #{contact_person_name},
         #{contact_person_phone},
         #{contact_person_relationship},
         #{sex},
         #{dob},    
         #{createdDate},
         #{createdById},
         #{status}
         )
    </insert>

   <update id="update"
        parameterType="com.rupp.assignment.json.JStudent">
        UPDATE students
        SET 
           firstname = #{firstname},
           lastname = #{lastname},
           sex = #{sex},           
           dob = #{dob},
           address = #{address},
           contact_person_name = #{contact_person_name},           
           contact_person_relationship = #{contact_person_relationship},
           contact_person_phone = #{contact_person_phone},
           
           modified_date = #{modifiedDate},
           modified_by = #{modifiedById},
           status = #{status}
        WHERE id = #{id}
    </update>

 	<update id="remove"
        parameterType="int">
        UPDATE students
        SET 
           modified_date = #{modifiedDate},
           modified_by = #{modifiedById},
           status = 0
        WHERE id = #{id}
    </update>
    

    <select id="findById" parameterType="int"  resultMap="StudentResult" 
        resultType="com.rupp.assignment.json.JStudent">
        SELECT 
        	if(st.sex=1,'M',  if(st.sex=2,'F','')) AS sex_label, 
        	if(st.contact_person_relationship=1,'Parents',  if(st.contact_person_relationship=2,'Other','')) AS contact_person_relationship_label,
        	st.*
        FROM students st
        WHERE status=1 AND id = #{id}
    </select>
    
   <select id='getAll' parameterType="map" resultMap="StudentResult" >
        SELECT if(st.sex=1,'M',  if(st.sex=2,'F','')) AS sex_label,
                if(st.contact_person_relationship=1,'Parents',  if(st.contact_person_relationship=2,'Other','')) AS contact_person_relationship_label,
				st.firstname, st.lastname, st.dob, st.id
        FROM students AS st
        WHERE st.status=1
    </select>
    
	<select id="getPage" parameterType="map" resultMap="StudentResult">
        SELECT if(st.sex=1,'M',  if(st.sex=2,'F','')) AS sex_label,
                if(st.contact_person_relationship=1,'Parents',  if(st.contact_person_relationship=2,'Other','')) AS contact_person_relationship_label,
				st.firstname, st.lastname, st.dob, st.id
        FROM students AS st
        WHERE st.status=1
		AND (
			st.contact_person_phone LIKE ${search}
		 	OR CONCAT(st.firstname," ", st.lastname) LIKE  ${search}		 
		 ) 
		ORDER BY st.id DESC 
		LIMIT #{limit} OFFSET #{offset}
		
    </select>

    <select id="count" resultType="int">
        SELECT COUNT(*) 
        FROM students AS st
        WHERE st.status = 1 
        AND (
			st.contact_person_phone LIKE ${search}
		 	OR CONCAT(st.firstname," ", st.lastname) LIKE  ${search}		 
		 ) 
    </select>
</mapper>
